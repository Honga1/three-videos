{"version":3,"sources":["ui/Button.tsx","ui/Messages.tsx","Store.tsx","Api.tsx","videos/1.mp4","videos/2.mp4","videos/3.mp4","StaticFileLoader.tsx","VideosReadyDev.tsx","ApiUpTest.tsx","ui/LabelledInput.tsx","ui/LabelledSelect.tsx","Config.tsx","DevUi.tsx","SequentialVideos.tsx","Permissions.tsx","VideoRecorder.tsx","ui/VideoStreamPreview.tsx","UserUi.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","forwardRef","props","ref","className","children","ErrorMessage","reason","PromptMessage","text","SuccessMessage","NeutralMessage","initialState","streams","undefined","recordings","fakedRecording","staticVideos","isPlaybackReady","config","recordingDuration","apiUrl","webcamScale","store","create","set","get","setStreams","closeStreams","audio","video","getTracks","forEach","track","addEventListener","maybeStreams","stop","setVideoRecording","recording","setStaticVideos","start","middle","end","setFakedRecording","setPlaybackReadiness","isReady","resetState","useStore","createStoreHook","Api","audioSource","state","destinationVideo","resultVideo","useState","uiState","setUiState","useEffect","sendToApi","a","console","error","formData","FormData","append","blob","toFixed","fetch","method","body","mode","response","includes","onClick","StaticVideoLoader","isAlreadyLoaded","setStaticFiles","videoSrcStart","videoSrcMiddle","videoSrcEnd","loadVideos","VideosReadyDev","maybeStaticVideos","maybeFakeRecording","controller","AbortController","signal","fetchStatusHandler","status","Error","statusText","ApiUpTest","testApi","useCallback","then","size","interval","setInterval","abort","clearInterval","LabelledInput","label","LabelledSelect","options","map","index","value","Config","name","type","min","max","defaultValue","getState","onChange","event","parseInt","target","setState","DevUi","isDevUiShowing","setDevUiShowing","buttonRef","useRef","noTranslation","menuTranslation","setMenuTranslation","style","transform","maybeBottom","current","getBoundingClientRect","bottom","window","innerHeight","SequentialVideos","canvasRef","videos","setVideos","width","height","setSize","currentVideoIndex","setCurrentVideoIndex","Promise","all","loadVideo","videoWidth","videoHeight","effect","useAnimationFrame","currentVideo","context","getContext","drawImage","length","onended","currentTime","paused","ended","readyState","log","play","pause","videoBlob","onMetaData","resolve","reject","document","createElement","src","URL","createObjectURL","load","onloadeddata","onerror","frameRate","callback","requestRef","previousTimeRef","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Permissions","isUserStreamOn","getStreams","getAudioStream","getVideoStream","navigator","mediaDevices","getUserMedia","stream","facingMode","VideoRecorder","duration","timeRemaining","setTimeRemaining","isRecording","setIsRecording","videoRecorder","useMemo","getVideoRecorder","timeout","setTimeout","url","videoUrl","clearTimeout","mediaRecorder","MediaRecorder","mimeType","videoChunks","push","data","Blob","VideoStreamPreview","srcObject","autoPlay","UserUi","isPermissionGranted","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea7665ef.chunk.js","sourcesContent":["import { forwardRef } from 'react';\n\nimport './Button.css';\n\nexport const Button = forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement>>(\n  (props, ref) => {\n    return (\n      <button ref={ref} className=\"Button\" {...props}>\n        {props.children}\n      </button>\n    );\n  },\n);\n","import './Messages.css';\n\nexport const ErrorMessage = ({ reason }: { reason: string }): React.ReactElement => {\n  return (\n    <div className=\"Message ErrorMessage\">\n      <span>Error: {reason}</span>\n    </div>\n  );\n};\n\nexport const PromptMessage = ({ text }: { text: string }): React.ReactElement => {\n  return (\n    <div className=\"Message PromptMessage\">\n      <span>{text}</span>\n    </div>\n  );\n};\n\nexport const SuccessMessage = ({ text }: { text: string }): React.ReactElement => {\n  return (\n    <div className=\"Message SuccessMessage\">\n      <span>Success: {text}</span>\n    </div>\n  );\n};\n\nexport const NeutralMessage = ({ text }: { text: string }): React.ReactElement => {\n  return (\n    <div className=\"Message NeutralMessage\">\n      <span>{text}</span>\n    </div>\n  );\n};\n","import create from 'zustand/vanilla';\nimport createStoreHook from 'zustand';\n\ntype Recording = {\n  blob: Blob;\n  url: string;\n};\n\ninterface Streams {\n  video: MediaStream;\n  audio: MediaStream;\n}\n\ntype State = {\n  streams: Streams | undefined;\n  staticVideos: { start: Blob; middle: Blob; end: Blob } | undefined;\n  recordings: { video?: Recording; audio?: Recording };\n  fakedRecording: Blob | undefined;\n  isPlaybackReady: boolean;\n  config: {\n    recordingDuration: number;\n    apiUrl: string;\n    webcamScale: number;\n  };\n  setStreams: (streams: Streams) => void;\n  closeStreams: () => void;\n  setVideoRecording: (recording: Recording) => void;\n  setStaticVideos: (start: Blob, middle: Blob, end: Blob) => void;\n  setFakedRecording: (video: Blob) => void;\n  setPlaybackReadiness: (isReady: boolean) => void;\n  resetState: () => void;\n};\n\ntype CallbackFunctionVariadic = (...args: never[]) => void;\ntype NonFunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends CallbackFunctionVariadic ? never : K;\n}[keyof T];\ntype NonFunctionProperties<T> = Pick<T, NonFunctionPropertyNames<T>>;\n\nconst initialState: NonFunctionProperties<State> = {\n  streams: undefined,\n  recordings: {},\n  fakedRecording: undefined,\n  staticVideos: undefined,\n  isPlaybackReady: false,\n  config: { recordingDuration: 3, apiUrl: 'http://localhost:9000', webcamScale: 2 },\n};\n\nexport const store = create<State>((set, get) => ({\n  ...initialState,\n  setStreams: (streams: Streams) => {\n    get().closeStreams();\n    const { audio, video } = streams;\n\n    audio.getTracks().forEach((track) => {\n      track.addEventListener('ended', () => {\n        get().closeStreams();\n      });\n    });\n\n    video.getTracks().forEach((track) => {\n      track.addEventListener('ended', () => {\n        get().closeStreams();\n      });\n    });\n\n    set({ streams });\n  },\n  closeStreams: () => {\n    const maybeStreams = get().streams;\n    if (maybeStreams) {\n      const { audio, video } = maybeStreams;\n      audio.getTracks().forEach((track) => {\n        track.stop();\n      });\n      video.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n    set({ streams: undefined });\n  },\n\n  setVideoRecording: (recording) => {\n    set({ recordings: { video: recording } });\n  },\n  setStaticVideos: (start, middle, end) => {\n    set({ staticVideos: { start, middle, end } });\n  },\n  setFakedRecording: (video) => {\n    set({ fakedRecording: video });\n  },\n\n  setPlaybackReadiness: (isReady: boolean) => set({ isPlaybackReady: isReady }),\n  resetState: () => {\n    const { config } = get();\n    set({ ...initialState, ...config });\n  },\n}));\n\nexport const useStore = createStoreHook(store);\n","import React, { useEffect, useState } from 'react';\nimport { Button } from './ui/Button';\nimport { SuccessMessage, ErrorMessage, NeutralMessage, PromptMessage } from './ui/Messages';\nimport { useStore } from './Store';\n\nexport const Api = ({ apiUrl }: { apiUrl: string }): React.ReactElement => {\n  const audioSource = useStore((state) => state.staticVideos?.middle);\n  const destinationVideo = useStore((state) => state.recordings?.video);\n  const resultVideo = useStore((state) => state.fakedRecording);\n  const webcamScale = useStore((state) => state.config.webcamScale);\n\n  const setFakedRecording = useStore((state) => state.setFakedRecording);\n\n  const [uiState, setUiState] = useState<\n    | 'awaitingAudioSource'\n    | 'awaitingDestinationVideo'\n    | 'prompt'\n    | 'awaitingResult'\n    | 'success'\n    | 'errorApi'\n    | 'errorSources'\n  >(\n    audioSource === undefined\n      ? 'awaitingAudioSource'\n      : destinationVideo === undefined\n      ? 'awaitingDestinationVideo'\n      : !!resultVideo\n      ? 'success'\n      : 'prompt',\n  );\n\n  useEffect(() => {\n    const uiState =\n      audioSource === undefined\n        ? 'awaitingAudioSource'\n        : destinationVideo === undefined\n        ? 'awaitingDestinationVideo'\n        : !!resultVideo\n        ? 'success'\n        : 'prompt';\n\n    setUiState(uiState);\n  }, [audioSource, destinationVideo, resultVideo]);\n\n  const sendToApi = async () => {\n    if (!audioSource || !destinationVideo) {\n      console.error(\n        `Not all sources are ready. source: ${audioSource}, destination: ${destinationVideo})`,\n      );\n      setUiState('errorSources');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('image', destinationVideo.blob);\n    formData.append('sound', audioSource);\n    formData.append('webcamScale', webcamScale.toFixed(0));\n\n    try {\n      setUiState('awaitingResult');\n      const response = await fetch(apiUrl + '/three_videos_demo', {\n        method: 'POST',\n        body: formData,\n        mode: 'cors',\n      });\n\n      const video = await response.blob();\n      setUiState('success');\n      setFakedRecording(video);\n    } catch (error) {\n      setUiState('errorApi');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"Api\">\n      {uiState === 'awaitingAudioSource' && <NeutralMessage text=\"Awaiting audio source\" />}\n      {uiState === 'awaitingDestinationVideo' && (\n        <NeutralMessage text=\"Awaiting destination video\" />\n      )}\n      {uiState === 'prompt' && <PromptMessage text=\"Source and Destination ready to be faked\" />}\n      {!uiState.includes('awaiting') && <Button onClick={sendToApi}>Send to API</Button>}\n      {uiState === 'awaitingResult' && <NeutralMessage text=\"Waiting for Api response\" />}\n      {uiState === 'success' && <SuccessMessage text=\"Got faked recording from Api\" />}\n      {uiState === 'errorApi' && <ErrorMessage reason=\"Could not fetch from Api\" />}\n      {uiState === 'errorSources' && <ErrorMessage reason=\"Souces are not ready\" />}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/1.6f4d89fa.mp4\";","export default __webpack_public_path__ + \"static/media/2.b65b1142.mp4\";","export default __webpack_public_path__ + \"static/media/3.7bc44234.mp4\";","import { useEffect, useState } from 'react';\nimport { ErrorMessage, NeutralMessage, SuccessMessage } from './ui/Messages';\nimport { useStore } from './Store';\n\nimport videoSrcStart from './videos/1.mp4';\nimport videoSrcMiddle from './videos/2.mp4';\nimport videoSrcEnd from './videos/3.mp4';\n\nexport const StaticVideoLoader = (): React.ReactElement => {\n  const isAlreadyLoaded = useStore((state) => !!state.staticVideos);\n  const setStaticFiles = useStore((state) => state.setStaticVideos);\n\n  const [uiState, setUiState] = useState<'notLoaded' | 'loading' | 'loaded' | 'error'>(\n    isAlreadyLoaded ? 'loaded' : 'notLoaded',\n  );\n  useEffect(() => {\n    if (isAlreadyLoaded) return;\n\n    const loadVideos = async () => {\n      setUiState('loading');\n\n      try {\n        const start = await (await fetch(videoSrcStart)).blob();\n        const middle = await (await fetch(videoSrcMiddle)).blob();\n        const end = await (await fetch(videoSrcEnd)).blob();\n        setUiState('loaded');\n        setStaticFiles(start, middle, end);\n      } catch (error) {\n        setUiState('error');\n        console.error(error);\n      }\n    };\n\n    loadVideos();\n  }, [isAlreadyLoaded, setStaticFiles]);\n\n  return (\n    <div className=\"StaticFileLoader\">\n      {uiState === 'notLoaded' && <NeutralMessage text=\"Files not loaded\" />}\n      {uiState === 'loading' && <NeutralMessage text=\"Files loading\" />}\n      {uiState === 'loaded' && <SuccessMessage text=\"Files loaded!\" />}\n      {uiState === 'error' && <ErrorMessage reason=\"Files could not load\" />}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { ErrorMessage, SuccessMessage } from './ui/Messages';\nimport { useStore } from './Store';\n\nexport const VideosReadyDev = (): React.ReactElement => {\n  const maybeStaticVideos = useStore((state) => state.staticVideos);\n  const maybeFakeRecording = useStore((state) => state.fakedRecording);\n  const setPlaybackReadiness = useStore((state) => state.setPlaybackReadiness);\n\n  useEffect(() => {\n    if (!maybeStaticVideos || !maybeFakeRecording) {\n      setPlaybackReadiness(false);\n    } else {\n      setPlaybackReadiness(true);\n    }\n  }, [maybeFakeRecording, maybeStaticVideos, setPlaybackReadiness]);\n\n  if (!maybeStaticVideos) {\n    return <ErrorMessage reason=\"Static videos not loaded\"></ErrorMessage>;\n  }\n  if (!maybeFakeRecording) {\n    return <ErrorMessage reason=\"Fake recording not received\"></ErrorMessage>;\n  }\n\n  return <SuccessMessage text=\"Videos Ready\"></SuccessMessage>;\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { SuccessMessage, ErrorMessage, NeutralMessage } from './ui/Messages';\n\nlet controller = new AbortController();\nlet signal = controller.signal;\n\nfunction fetchStatusHandler(response: Response): Response {\n  if (response.status === 200) {\n    return response;\n  } else {\n    throw new Error(response.statusText);\n  }\n}\n\nexport const ApiUpTest = ({ apiUrl }: { apiUrl: string }): React.ReactElement => {\n  const testApi = useCallback(async () => {\n    try {\n      const response = await fetch(apiUrl + '/three_videos_is_up', {\n        method: 'POST',\n        mode: 'cors',\n        body: new FormData(),\n        signal,\n      }).then(fetchStatusHandler);\n      const file = await response.blob();\n      if (file.size <= 0) {\n        throw new Error('API Failed. Did not get blob successfully');\n      }\n      setUiState('success');\n    } catch (error) {\n      setUiState('errorApi');\n      console.error(error);\n    }\n  }, [apiUrl]);\n\n  useEffect(() => {\n    testApi();\n    const interval = setInterval(async () => {\n      controller.abort();\n      controller = new AbortController();\n      signal = controller.signal;\n      await testApi();\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, [testApi]);\n\n  const [uiState, setUiState] = useState<'idle' | 'success' | 'errorApi'>('idle');\n\n  return (\n    <div className=\"Api\">\n      {uiState === 'idle' && <NeutralMessage text=\"Api test idle\" />}\n      {uiState === 'success' && <SuccessMessage text=\"Api is Up\" />}\n      {uiState === 'errorApi' && <ErrorMessage reason=\"Api is down\" />}\n    </div>\n  );\n};\n","import { ReactElement } from 'react';\n\nimport './LabelledInput.css';\n\ntype Props = {\n  label: string;\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\nexport const LabelledInput = (props: Props): ReactElement => {\n  return (\n    <div className=\"LabelledInput\">\n      <label className=\"Label\">\n        <span>{props.label} </span>\n        <input className=\"Input\" {...props}>\n          {props.children}\n        </input>\n      </label>\n    </div>\n  );\n};\n","import { ReactElement } from 'react';\n\nimport './LabelledSelect.css';\n\ntype Props = {\n  label: string;\n  options: [value: React.OptionHTMLAttributes<HTMLOptionElement>['value'], text: string][];\n} & React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n\nexport const LabelledSelect = (props: Props): ReactElement => {\n  return (\n    <div className=\"LabelledSelect\">\n      <label className=\"Label\">\n        <span>{props.label} </span>\n        <select className=\"Select\" {...props}>\n          {props.options.map(([value, text], index) => (\n            <option key={index} value={value}>\n              {text}\n            </option>\n          ))}\n        </select>\n      </label>\n    </div>\n  );\n};\n","import { ChangeEvent, ReactElement } from 'react';\nimport { LabelledInput } from './ui/LabelledInput';\nimport { store, useStore } from './Store';\nimport { LabelledSelect } from './ui/LabelledSelect';\n\nexport const Config = (): ReactElement => {\n  const webcamScale = useStore((state) => state.config.webcamScale);\n  const onDurationChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const config = store.getState().config;\n    const recordingDuration = parseInt(event.target.value, 10);\n\n    store.setState({ config: { ...config, recordingDuration } });\n  };\n\n  const onApiUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const config = store.getState().config;\n    const apiUrl = event.target.value;\n\n    store.setState({ config: { ...config, apiUrl } });\n  };\n\n  const onScaleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const config = store.getState().config;\n    const webcamScale = parseInt(event.target.value, 10);\n\n    store.setState({ config: { ...config, webcamScale } });\n  };\n  return (\n    <div className=\"Config\">\n      <LabelledInput\n        label=\"Recording Duration:\"\n        name=\"recordingDuration\"\n        type=\"number\"\n        min={0}\n        max={16}\n        defaultValue={store.getState().config.recordingDuration}\n        onChange={onDurationChange}\n      ></LabelledInput>\n\n      <LabelledInput\n        label=\"API Url:\"\n        name=\"apiUrl\"\n        type=\"string\"\n        defaultValue={store.getState().config.apiUrl}\n        onChange={onApiUrlChange}\n      ></LabelledInput>\n\n      <LabelledSelect\n        label=\"Webcam Scale\"\n        options={[\n          [1, '100%'],\n          [2, '50%'],\n          [3, '33%'],\n          [4, '25%'],\n        ]}\n        value={webcamScale}\n        onChange={onScaleChange}\n      ></LabelledSelect>\n    </div>\n  );\n};\n","import React, { ReactElement, useRef, useState } from 'react';\nimport { Api } from './Api';\nimport { StaticVideoLoader } from './StaticFileLoader';\n\nimport './DevUi.css';\nimport { VideosReadyDev } from './VideosReadyDev';\nimport { ApiUpTest } from './ApiUpTest';\nimport { Config } from './Config';\nimport { store, useStore } from './Store';\nimport { Button } from './ui/Button';\n\nexport const DevUi = (): ReactElement => {\n  const apiUrl = useStore((state) => state.config.apiUrl);\n  const [isDevUiShowing, setDevUiShowing] = useState(true);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const noTranslation = `translate(0, 0)`;\n  const [menuTranslation, setMenuTranslation] = useState(noTranslation);\n\n  const toggleUi = () => {\n    setDevUiShowing(!isDevUiShowing);\n    const maybeBottom = buttonRef.current?.getBoundingClientRect().bottom;\n\n    if (isDevUiShowing && maybeBottom) {\n      const menuTranslation = `translate(0, ${window.innerHeight - maybeBottom}px)`;\n      setMenuTranslation(menuTranslation);\n    } else {\n      setMenuTranslation(noTranslation);\n    }\n  };\n\n  return (\n    <div style={{ transform: menuTranslation }} className={`DevUi`}>\n      <Button ref={buttonRef} onClick={toggleUi}>\n        {isDevUiShowing ? 'Hide' : 'Show'}\n      </Button>\n      <Config />\n      <StaticVideoLoader />\n      <ApiUpTest apiUrl={apiUrl} />\n      <Api apiUrl={apiUrl} />\n      <VideosReadyDev />\n      <Button onClick={store.getState().resetState}>Reset State</Button>\n    </div>\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\ntype Props = {\n  start: Blob;\n  middle: Blob;\n  end: Blob;\n};\n\nconst isVideoPlaying = (video: HTMLVideoElement) =>\n  !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\n\nexport const SequentialVideos = ({ start, middle, end }: Props): React.ReactElement => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [videos, setVideos] = useState<HTMLVideoElement[]>([]);\n  const [size, setSize] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\n  const [currentVideoIndex, setCurrentVideoIndex] = useState<number>(0);\n\n  useEffect(() => {\n    const effect = async () => {\n      const videos = await Promise.all(\n        [start, middle, end].map((blob, index) => {\n          const isFirst = index === 0;\n          const setSizeCallback = isFirst\n            ? (video: HTMLVideoElement) =>\n                setSize({ width: video.videoWidth, height: video.videoHeight })\n            : () => ({});\n          return loadVideo(blob, setSizeCallback);\n        }),\n      );\n\n      setVideos(videos);\n    };\n\n    effect();\n  }, [end, middle, start]);\n\n  useAnimationFrame(60, () => {\n    const currentVideo = videos[currentVideoIndex];\n    const context = canvasRef.current?.getContext('2d');\n    if (currentVideo === undefined) return;\n    if (context === undefined || context === null) return;\n\n    context.drawImage(currentVideo, 0, 0, size.width, size.height);\n  });\n\n  useEffect(() => {\n    if (videos.length === 0) return;\n    const currentVideo = videos[currentVideoIndex];\n    if (currentVideo === undefined)\n      throw new Error(\n        `currentVideoIndex out of range. Got ${currentVideoIndex}, expected between 0 and ${videos.length}`,\n      );\n    currentVideo.onended = () => setCurrentVideoIndex((currentVideoIndex + 1) % videos.length);\n    if (!isVideoPlaying(currentVideo)) {\n      console.log(`playing video ${currentVideoIndex}`);\n      currentVideo.play();\n    }\n\n    return () => {\n      currentVideo.pause();\n    };\n  }, [currentVideoIndex, videos]);\n\n  return <canvas ref={canvasRef} width={size.width} height={size.height}></canvas>;\n};\n\nasync function loadVideo(videoBlob: Blob, onMetaData: (video: HTMLVideoElement) => void) {\n  return new Promise<HTMLVideoElement>((resolve, reject) => {\n    const video = document.createElement('video');\n    video.src = URL.createObjectURL(videoBlob);\n    video.load();\n    video.onloadeddata = () => resolve(video);\n    video.onerror = (error) => reject(error);\n    video.addEventListener('loadedmetadata', () => onMetaData(video));\n  });\n}\n\nexport const useAnimationFrame = (\n  frameRate: number,\n  callback: (deltaTime: number) => void,\n): void => {\n  const requestRef = useRef<number>();\n  const previousTimeRef = useRef<number>();\n\n  const animate = useCallback(\n    (time: number) => {\n      if (previousTimeRef.current !== undefined) {\n        const deltaTime = time - previousTimeRef.current;\n        callback(deltaTime);\n      }\n      previousTimeRef.current = time;\n    },\n    [callback],\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      requestRef.current = requestAnimationFrame(animate);\n    }, 1000 / frameRate);\n    return () => {\n      requestRef.current && cancelAnimationFrame(requestRef.current);\n      interval && clearInterval(interval);\n    };\n  }, [animate, frameRate]);\n};\n","import React, { useState } from 'react';\nimport { useStore } from './Store';\nimport { ErrorMessage, PromptMessage } from './ui/Messages';\nimport { Button } from './ui/Button';\n\nexport const Permissions = (): React.ReactElement => {\n  const isUserStreamOn = useStore((state) => !!state.streams);\n  const setStreams = useStore((state) => state.setStreams);\n\n  const [uiState, setUiState] = useState<\n    'prompt' | 'accepted' | 'errorVideo' | 'errorAudio' | 'errorDisconnected'\n  >(isUserStreamOn ? 'accepted' : 'prompt');\n\n  if (uiState === 'accepted') {\n  }\n\n  if (isUserStreamOn && uiState !== 'accepted') {\n    setUiState('accepted');\n  }\n\n  if (!isUserStreamOn && uiState === 'accepted') {\n    setUiState('errorDisconnected');\n  }\n\n  const getStreams = async () => {\n    const audio = await getAudioStream();\n    const video = await getVideoStream();\n\n    if (!audio) {\n      setUiState('errorAudio');\n      return;\n    }\n\n    if (!video) {\n      setUiState('errorVideo');\n      return;\n    }\n\n    setStreams({ audio, video });\n  };\n\n  return (\n    <div className=\"Permissions\">\n      <PromptMessage\n        text={\n          'This is an interactive documentary. The interaction is provided via your microphone and webcam. Please enable this now.'\n        }\n      ></PromptMessage>\n\n      <Button onClick={getStreams}>Enable Webcam & Audio</Button>\n\n      {uiState === 'accepted' && <PromptMessage text={'Devices connected!'}></PromptMessage>}\n      {uiState === 'errorAudio' && <ErrorMessage reason={'Could not get microphone.'} />}\n      {uiState === 'errorVideo' && <ErrorMessage reason={'Could not get webcam.'} />}\n      {uiState === 'errorDisconnected' && <ErrorMessage reason={'Devices disconnected.'} />}\n    </div>\n  );\n};\n\nasync function getAudioStream() {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\n    return stream;\n  } catch (error) {\n    console.error(error);\n    return undefined;\n  }\n}\n\nasync function getVideoStream() {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: { width: 1280, height: 720, facingMode: 'user' },\n      audio: false,\n    });\n    return stream;\n  } catch (error) {\n    console.error(error);\n    return undefined;\n  }\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Button } from './ui/Button';\nimport { NeutralMessage, PromptMessage } from './ui/Messages';\nimport { useStore } from './Store';\n\ntype Props = {\n  stream: MediaStream;\n  duration: number;\n};\n\nexport const VideoRecorder = ({ stream, duration }: Props): React.ReactElement => {\n  const [timeRemaining, setTimeRemaining] = useState(duration);\n  const [isRecording, setIsRecording] = useState(false);\n\n  const setVideoRecording = useStore((state) => state.setVideoRecording);\n  const videoRecorder = useMemo(() => getVideoRecorder(stream), [stream]);\n\n  const [uiState, setUiState] = useState<'prompt' | 'recording' | 'recorded'>('prompt');\n  useEffect(() => {\n    if (isRecording) return;\n    if (uiState === 'recorded') return;\n\n    setUiState('prompt');\n    setTimeRemaining(duration);\n    setIsRecording(false);\n  }, [isRecording, uiState, stream, duration]);\n\n  useEffect(() => {\n    if (!isRecording) return;\n    const timeout = setTimeout(async () => {\n      if (timeRemaining > 0) {\n        setTimeRemaining(timeRemaining - 1);\n        return;\n      }\n\n      const { videoBlob: blob, videoUrl: url } = await videoRecorder.stop();\n      setUiState('recorded');\n      setIsRecording(false);\n      setVideoRecording({ blob, url });\n    }, 1000);\n\n    return () => clearTimeout(timeout);\n  }, [isRecording, setVideoRecording, timeRemaining, videoRecorder]);\n\n  const recordVideo = () => {\n    setTimeRemaining(duration);\n    setUiState('recording');\n    setIsRecording(true);\n    videoRecorder.start();\n  };\n\n  return (\n    <div className=\"VideoRecorder\">\n      {uiState === 'prompt' && (\n        <PromptMessage\n          text={`Our AI needs to be trained. Please record ${duration} seconds of your webcam`}\n        ></PromptMessage>\n      )}\n      {uiState === 'recording' && (\n        <NeutralMessage text={`Recoding for another: ${timeRemaining}s`}></NeutralMessage>\n      )}\n      {uiState === 'recorded' && <NeutralMessage text={`Trained!`}></NeutralMessage>}\n      {uiState !== 'recording' && <Button onClick={recordVideo}>Record Video</Button>}\n    </div>\n  );\n};\n\ntype VideoRecorderResult = {\n  start: () => void;\n  stop: () => Promise<{\n    videoBlob: Blob;\n    videoUrl: string;\n  }>;\n};\n\nconst getVideoRecorder = (stream: MediaStream): VideoRecorderResult => {\n  const options = { mimeType: 'video/webm; codecs=h264' };\n  const mediaRecorder = new MediaRecorder(stream, options);\n  const videoChunks: Blob[] = [];\n\n  mediaRecorder.addEventListener('dataavailable', (event) => {\n    videoChunks.push(event.data);\n  });\n\n  const start = () => {\n    videoChunks.length = 0;\n    mediaRecorder.start();\n  };\n\n  const stop = () =>\n    new Promise<{ videoBlob: Blob; videoUrl: string }>((resolve) => {\n      mediaRecorder.addEventListener('stop', () => {\n        const videoBlob = new Blob(videoChunks, {\n          type: 'video/webm',\n        });\n        const videoUrl = URL.createObjectURL(videoBlob);\n\n        resolve({ videoBlob, videoUrl });\n      });\n\n      mediaRecorder.stop();\n    });\n\n  return { start, stop };\n};\n","import React, { useEffect, useRef } from 'react';\nimport './VideoStreamPreview.css';\n\ntype Props = {\n  stream: MediaStream;\n};\n\nexport const VideoStreamPreview = ({ stream }: Props): React.ReactElement => {\n  const ref = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    ref.current.srcObject = stream;\n  }, [stream]);\n\n  return (\n    <div className=\"VideoStreamPreview\">\n      <video autoPlay={true} ref={ref}></video>\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport { Permissions } from './Permissions';\nimport { useStore } from './Store';\nimport { VideoRecorder } from './VideoRecorder';\nimport { VideoStreamPreview } from './ui/VideoStreamPreview';\n\nimport './UserUi.css';\n\nexport const UserUi = (): ReactElement => {\n  const isPermissionGranted = useStore((state) => !!state.streams);\n  const stream = useStore((state) => state.streams?.video);\n  const isPlaybackReady = useStore((state) => state.isPlaybackReady);\n  const recordingDuration = useStore((state) => state.config.recordingDuration);\n\n  return (\n    <>\n      {!isPlaybackReady && (\n        <div className=\"UserUi\">\n          {!isPermissionGranted && <Permissions />}\n          {stream !== undefined && (\n            <>\n              <VideoRecorder stream={stream} duration={recordingDuration} />\n              <VideoStreamPreview stream={stream} />\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { DevUi } from './DevUi';\nimport { SequentialVideos } from './SequentialVideos';\nimport { useStore } from './Store';\nimport { UserUi } from './UserUi';\n\nfunction App(): React.ReactElement {\n  const staticVideos = useStore((state) => state.staticVideos);\n  const fakedRecording = useStore((state) => state.fakedRecording);\n\n  return (\n    <div className=\"App\">\n      <div className=\"AppContents\">\n        <UserUi />\n        <DevUi />\n        {!!staticVideos && !!fakedRecording && (\n          <SequentialVideos\n            start={staticVideos.start}\n            middle={fakedRecording}\n            end={staticVideos.end}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}